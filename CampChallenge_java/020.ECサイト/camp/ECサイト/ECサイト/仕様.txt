取組開始時間：2017年8月8日15:15
納期：10日間
締切：2017年8月22日15:15


＜要件＞
・商品の検索や、結果の詳細から「買い物かごに追加」のできるECサイト

・ログイン、会員登録ができ、ログイン状態により画面表示＆遷移が若干変化する

・商品の情報はYahooAPIを用いて取得する

・買い物かごから購入画面へと遷移できる

・実際に購入は出来ない(重要)



＜ページ遷移＞
 top  ━━━━━   login
  ┃　       　     ┃
search   ━    registration ━ registration_confirm ━ registration_complete
  ┃
 item ━━━━━   mydata   ━ mydata_update
  ┃  ━━━━━   cart     ━ buy_confirm   ━ buy_complete
  add



＜システムの共通機能＞
・全てのページに、「ログイン」を表示。

・ログイン済みの場合、「ログイン」の代わりに「ログアウト」と「買い物かご」を表示。
　さらに、「ようこそ(ユーザー名[クリック可能])さん！」を表示。
 　ex)ようこそ添田さん！



＜top（トップページ）＞
・このシステムの簡単な説明が記載されている。テキストは自由。

・キーワード検索フォームが設置されている。検索の遷移先はsearchで、GETメソッド。
　未入力ならエラーを表示。



＜search（結果一覧）＞
・topから検索により遷移できる。YahooショッピングAPIに直接検索キーワードを渡し、
　その結果を受け取り＆表示している。

・検索キーワード、検索結果数を表示。

・縦のリスト型に表示。サムネイルと、その横に商品名、金額が載っている。
　クリックでitemへ。

・結果は上位10件まで。



＜item（商品詳細ページ）＞
・searchまたはcartから遷移できる。商品IDをGETメソッドにより受け渡す。

・YahooショッピングAPIから取得したデータで、より詳細な情報(概要や評価値)
　が表示される。

・「カートに追加する」ボタンがあり、クリックするとaddに遷移する。



＜add（カートへ商品を追加）＞
・商品の情報を受け取り、クッキーやセッションに追加する。

・画面には「カートに追加しました」という文言が出てくる。



＜login（ログインページ）＞
・どのページからも遷移できる。ログインしているかいないかで処理が分岐する。

・ログインしていない状態(各ページの「ログイン」というリンクから)で遷移してきた場合、
　ユーザー名とパスワードを入力するフォームが表示される。
　また、「新規会員登録」というリンクも表示される。

・ログインに成功すると、その情報をログイン状態を管理できるセッションに書き込み、
　そのまま直前まで閲覧していたページに遷移する。

・ログインしている状態で(各ページの「ログアウト」というリンクから)遷移してきた場合、
　ログアウト処理を行う(セッションの破棄、クッキーに保存されたセッションIDを破棄)
　その後topへ。

・ユーザーデータの削除フラグが1の場合は削除されたユーザーとして処理すること。



＜registration（会員登録 - 入力画面）＞
・loginからのみ遷移。

・フォームがあり、入力するのは以下の要素。
	ユーザー名
	パスワード
	メールアドレス
	住所

・registration_confirmから戻ってきた場合は、値を保持して記入済みにできる。



＜registrationconfirm（会員登録 - 確認画面）＞
・フォームで入力された文字や選択を表示し、
　「上記の内容で登録いたします。よろしいですか？」と表示。
　「はい」でregistration_complete
　「いいえ」でregistrationに値を保持したまま
　(戻った時にフォーム入力済みになっている)遷移。
　もし入力が不足していた場合はどの項目のデータが不足しているのかを表示。
　insertに値を保持したまま遷移するリンクを表示。



＜registrationcomplete（会員登録 - 完了画面）＞
・プロフィール用のDBに値を挿入。この際、現在時(年月日時分)を組み込み関数で取得し、
　追加。

・「以上の内容で登録しました。」とregistration_confirmのように
　フォームで入力された値を表示。

・「トップページへ戻る」のリンクが、目立つ場所に設置されている。



＜cart（カートページ）＞
・「カートに追加」でクッキーやセッションに保存された登録情報が登録古い順に
　表示される。

・商品の写真と名前(リンクつき)、金額を表示。

・画面下部に全額の合計金額を表示する。

・「購入する」ボタンあり。

・各商品には「削除」のリンクあり。このリンクをクリックすることで、カートから商品を削除する。

・カートの中身はユーザー毎に切り替えられる。

・ログインしていない状態ならばログインページに遷移、そこでログインに成功した場合、
　非ログイン状態で「カートに追加」操作をしていた商品はそのユーザー用のカートに移る。



＜buyconfirm（購入 - 確認画面）＞
・カートに追加順で商品の名前(リンクなし)、金額が表示される。

・合計金額が表示され、その下に発送方法を選択するラジオボタンがある。

・「上記の内容で購入する」ボタンと「カートに戻る」ボタンがある。



＜buycomplete（購入 - 完了画面）＞
・購入データを保存。

・総購入金額を更新。

・「購入が完了しました」と表示。



＜mydata（会員情報 - 閲覧画面）＞
・登録したユーザー情報が閲覧できる。(ユーザーID以外全て)

・購入履歴へのリンクあり。

・登録情報を更新する、削除するリンクあり。



＜myhistory（会員情報 - 購入履歴）＞
・これまで購入した商品の履歴が見れる。



＜myupdate（会員情報 - 更新画面）＞
・フォームから入力するデータで既にあるデータを更新できる。

・画面構成はregistrationと同じ。フォーム内に直接記入された状態である。
　このフォームの内容を書き換えていくことでデータの更新ができる。

・送信ボタン付き。



＜myupdateresult（会員情報 - 更新完了画面）＞
・IDなどを受け取り、DBを更新。

・「以上の内容で更新しました。」と、フォームで入力された値を表示。



＜mydelete（会員情報 - 削除画面）＞
・対象のレコードの全データを表示したのちに、「このユーザーをマジで削除しますか？」
　という質問があり、「はい」と「いいえ」が直リンクとして設置してある。
　「はい」ならmy_delete_resultへ、そうでないならトップページへ遷移する。



＜mydeleteresult（会員情報 - 削除完了画面）＞
・ここにアクセスした段階で、IDによる削除が実行される。
　(外部キー制約により直接DELETEは出来ないので、削除フラグを0から1に変更する)

・「削除しました」という一文が表示される。



＜UserDataDTO.java（共通 - ユーザー情報保持クラス）＞
・ユーザー情報を格納するBeansオブジェクト。型やフィールド名がDBと連携している。

・データベースからの格納、取り出しで取得されたデータを最初に格納する。



＜UserDataDAO.java（共通 - ユーザー情報DB処理）＞
・データベース処理系全般をつかさどるオブジェクト。

・基本的にデータはUserDataDTO経由。



＜UserData.java（共通 - ユーザー情報クラス）＞
・フォームからの入出力されるデータを格納するBeansオブジェクト。

・DTOからの変換、逆に、DTOへの変換を行うメソッドを保持する。



＜データベースの構成＞
・まず、かごゆめ用のデータベース「kagoyume_db」を作成してください。
　その上で、会員情報管理用テーブルと購入履歴テーブルを作成します。

** テーブル名:user_t **
会員情報管理テーブル。初回の登録や更新以外に、購入時には総購入金額が更新

カラム名　　　          userID	　　　　　　　 name	　　  password	　 　　mail	　　address	　total	　　　　newDate	　　　deleteFlg
論理名	　　　         ユーザID	　　　　　 　ユーザー名	　　 パスワード	　 メールアドレス　　 住所	総購入金額	登録日時　　  削除フラグ
データ型　　　int(主キー,AUTO_INCREMENT)　　varchar(255)　　varchar(255)　　varchar(255)　　　text	　 int	　　　　Datetime　 　int(初期値0)


** テーブル名:buy_t **
購入管理テーブル。1度の購入につき購入する商品の個数分生成される

カラム名　　　 　　　　　buyID	　　　　　　　  userID　　　　　itemCode	type　　　 buyDate
論理名	       　　　　　購入ID	　　　　　　　ユーザーID　　　 商品コード　　 発送方法	　 購入日時
データ型　　　 int(主キー,AUTO_INCREMENT)　　int(外部キー)　　varchar(255)　　　int　　　　Datetime

