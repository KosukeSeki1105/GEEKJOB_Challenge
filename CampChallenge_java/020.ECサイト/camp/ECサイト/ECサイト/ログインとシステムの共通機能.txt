＜login（ログインページ）＞
・どのページからも遷移できる。ログインしているかいないかで処理が分岐する。



・ログインしていない状態(各ページの「ログイン」というリンクから)で遷移してきた場合
　は、ユーザー名とパスワードを入力するフォームが表示される。
　また、「新規会員登録」というリンクも表示される。



・ログインに成功すると、その情報をログイン状態を管理できるセッションに書き込み、
　そのまま直前まで閲覧していたページに遷移する。

　　　ログインが成功したかどうかを確かめるためのサーブレットが必要。
　　　UserDataにフォーム入力情報を格納。
　　（未入力項目があった場合にも対処）
　　　UserDataDAOのメソッドを利用した処理を実装。
　　　ログイン成功時は直前のページへ遷移 ※１
　　　ログイン失敗時はログイン画面へ遷移（フォームの入力情報は残す）

　※1 ログインに成功情報をログイン状態を管理できるセッションに書き込み。
　　　各ページのログインボタンから遷移しているのでページに関するセッション情報を取得。
      ページ遷移した後の「ようこそ○○さん」の表示のために、
　　　セッションにUserDataの名前を格納。
      取得したページ情報をもとに、直前まで閲覧していたページに遷移。
　　　ログインに成功状態を管理しているセッションを使って、
　　　ログイン済みの場合には「ログイン」の代わりに
　　「ログアウト」と「買い物かご」と「ようこそ(ユーザー名[クリック可能])さん！」を表示。
　


・ログインしている状態で(各ページの「ログアウト」というリンクから)遷移してきた場合は、
　ログアウト処理を行う(セッションの破棄、クッキーに保存されたセッションIDを破棄)その後topへ。
　【Login.java】
　１.セッションの破棄
　２.トップへ遷移



・ユーザーデータの削除フラグが1の場合は削除されたユーザーとして処理すること







＜システムの共通機能＞
・全てのページに、「ログイン」を表示。
	top、search、item、add、(cart)



・ログイン済みの場合、「ログイン」の代わりに「ログアウト」と「買い物かご」を表示。
　さらに、「ようこそ(ユーザー名[クリック可能])さん！」を表示。
 　ex)ようこそ添田さん！

　　　ログインに成功状態を管理しているセッションを使って、
　　　ログイン済みの場合には「ログイン」の代わりに
　　「ログアウト」と「買い物かご」と「ようこそ(ユーザー名[クリック可能])さん！」を表示。



・データベースの接続処理を一任させるDBManager.javaを作成。



